version: '3.8'

services:
  db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - app_network
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "listen_addresses=0.0.0.0"

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:7.0
    ports:
      - 3567:3567
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: liquibase/liquibase:4.25-alpine
    environment:
      - PGUSER=postgres
      - PGHOST=localhost
      - PGPASSWORD=postgres
      - PGDATABASE=thespot
      - PGPORT=5432
    networks:
      - app_network
    command: "liquibase --url=jdbc:postgresql://db/thespot --changeLogFile=./changelog/changelog-root.xml --defaultsFile=liquibase.properties --username=${POSTGRES_USER} --password=${POSTGRES_PASSWORD} update"
    volumes:
      - ./db:/liquibase/changelog

  rollback:
    image: liquibase/liquibase:4.25-alpine
    environment:
      - PGUSER=postgres
      - PGHOST=localhost
      - PGPASSWORD=postgres
      - PGDATABASE=thespot
      - PGPORT=5432
    networks:
      - app_network
    command: "liquibase --url=jdbc:postgresql://db/thespot --changeLogFile=./changelog/changelog-root.xml --defaultsFile=liquibase.properties --username=${POSTGRES_USER} --password=${POSTGRES_PASSWORD} rollback-count --count=1"
    volumes:
      - ./db:/liquibase/changelog

  api:
    image: thespot/api
    environment:
      - PGUSER=postgres
      - PGHOST=localhost
      - PGPASSWORD=postgres
      - PGDATABASE=thespot
      - PGPORT=5432
    build:
      context: api
    networks:
      - app_network
    ports:
      - '3000:3000'
    command: "tail -f /dev/null"
    volumes:
      - ./api:/app

  client:
    image: thespot/client
    build:
      context: client
    networks:
      - app_network
    ports:
      - '8081:8081'
    command: "tail -f /dev/null"
    volumes:
      - ./client:/app

volumes:
  db:
    driver: local

networks:
  app_network:
    driver: bridge
